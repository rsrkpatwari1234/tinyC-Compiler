Terminals unused in grammar

   HASH
   TYPEDEF
   UNION
   STRUCT


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_expression: IDENTIFIER
    4                   | INTEGER_CONSTANT
    5                   | FLOAT_CONSTANT
    6                   | CHARACTER_CONSTANT
    7                   | STRING_LITERAL
    8                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    9 postfix_expression: primary_expression
   10                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   11                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   12                   | postfix_expression DOT IDENTIFIER
   13                   | postfix_expression IMPLIES IDENTIFIER
   14                   | postfix_expression UNARY_INCREMENT
   15                   | postfix_expression UNARY_DECREMENT
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   18 argument_expression_list_opt: argument_expression_list
   19                             | %empty

   20 argument_expression_list: assignment_expression
   21                         | argument_expression_list COMMA assignment_expression

   22 unary_expression: postfix_expression
   23                 | UNARY_INCREMENT unary_expression
   24                 | UNARY_DECREMENT unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF unary_expression
   27                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   28 unary_operator: BITWISE_AND
   29               | MUL
   30               | PLUS
   31               | MINUS
   32               | COMPLEMENT
   33               | NOT

   34 cast_expression: unary_expression
   35                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression MUL cast_expression
   38                          | multiplicative_expression DIV cast_expression
   39                          | multiplicative_expression MOD cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression PLUS multiplicative_expression
   42                    | additive_expression MINUS multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression BITWISE_LEFT additive_expression
   45                 | shift_expression BITWISE_RIGHT additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression LESS_THAN shift_expression
   48                      | relational_expression GREATER_THAN shift_expression
   49                      | relational_expression LESS_EQUAL shift_expression
   50                      | relational_expression GREATER_EQUAL shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQUAL relational_expression
   53                    | equality_expression NOT_EQUAL relational_expression

   54 AND_expression: equality_expression
   55               | AND_expression BITWISE_AND equality_expression

   56 exclusive_OR_expression: AND_expression
   57                        | exclusive_OR_expression XOR AND_expression

   58 inclusive_OR_expression: exclusive_OR_expression
   59                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   60 logical_AND_expression: inclusive_OR_expression
   61                       | logical_AND_expression N LOGICAL_AND M inclusive_OR_expression

   62 logical_OR_expression: logical_AND_expression
   63                      | logical_OR_expression N LOGICAL_OR M logical_AND_expression

   64 conditional_expression: logical_OR_expression
   65                       | logical_OR_expression N QUES_MARK M expression N COLON M conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: ASSIGN
   69                    | MUL_ASSIGN
   70                    | DIV_ASSIGN
   71                    | MOD_ASSIGN
   72                    | PLUS_ASSIGN
   73                    | MINUS_ASSIGN
   74                    | BITWISE_LEFT_ASSIGN
   75                    | BITWISE_RIGHT_ASSIGN
   76                    | BITWISE_AND_ASSIGN
   77                    | XOR_ASSIGN
   78                    | BITWISE_OR_ASSIGN

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   83 init_declarator_list_opt: init_declarator_list
   84                         | %empty

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | %empty

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator ASSIGN initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC

   97 type_specifier: VOID
   98               | CHAR
   99               | SHORT
  100               | INT
  101               | LONG
  102               | FLOAT
  103               | DOUBLE

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  105                         | type_qualifier specifier_qualifier_list_opt

  106 specifier_qualifier_list_opt: specifier_qualifier_list
  107                             | %empty

  108 type_qualifier: CONST
  109               | RESTRICT
  110               | VOLATILE

  111 function_specifier: INLINE

  112 declarator: pointer direct_declarator
  113           | direct_declarator

  114 direct_declarator: IDENTIFIER
  115                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  119                  | direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  120                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  122                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  123                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  124                  | direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  125                  | direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  126                  | direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  127                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

  128 changetable: %empty

  129 pointer: MUL type_qualifier_list_opt
  130        | MUL type_qualifier_list_opt pointer

  131 type_qualifier_list: type_qualifier
  132                    | type_qualifier_list type_qualifier

  133 type_qualifier_list_opt: type_qualifier_list
  134                        | %empty

  135 parameter_type_list: parameter_list
  136                    | parameter_list COMMA DOTS

  137 parameter_list: parameter_declaration
  138               | parameter_list COMMA parameter_declaration

  139 parameter_declaration: declaration_specifiers declarator
  140                      | declaration_specifiers

  141 identifier_list: IDENTIFIER
  142                | identifier_list COMMA IDENTIFIER

  143 type_name: specifier_qualifier_list

  144 initializer: assignment_expression
  145            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  146            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  147 initializer_list: designation_opt initializer
  148                 | initializer_list COMMA designation_opt initializer

  149 designation: designator_list ASSIGN

  150 designation_opt: designation
  151                | %empty

  152 designator_list: designator
  153                | designator_list designator

  154 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  155           | DOT IDENTIFIER

  156 statement: labeled_statement
  157          | compound_statement
  158          | expression_statement
  159          | selection_statement
  160          | iteration_statement
  161          | jump_statement

  162 labeled_statement: IDENTIFIER COLON statement
  163                  | CASE constant_expression COLON statement
  164                  | DEFAULT COLON statement

  165 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  166 block_item_list: block_item
  167                | block_item_list M block_item

  168 block_item: declaration
  169           | statement

  170 block_item_list_opt: block_item_list
  171                    | %empty

  172 expression_statement: expression_opt SEMICOLON

  173 expression_opt: expression
  174               | %empty

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  176                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement
  177                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement
  179                    | DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  180                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  181                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

  182 jump_statement: GOTO IDENTIFIER SEMICOLON
  183               | CONTINUE SEMICOLON
  184               | BREAK SEMICOLON
  185               | RETURN expression SEMICOLON
  186               | RETURN SEMICOLON

  187 translation_unit: external_declaration
  188                 | translation_unit external_declaration

  189 external_declaration: function_definition
  190                     | declaration

  191 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement

  192 declaration_list: declaration
  193                 | declaration_list declaration

  194 declaration_list_opt: declaration_list
  195                     | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 3 12 13 114 141 142 155 162 182
INTEGER_CONSTANT (259) 4
FLOAT_CONSTANT (260) 5
CHARACTER_CONSTANT (261) 6
STRING_LITERAL (262) 7
ROUND_BRACKET_OPEN (263) 8 11 16 17 27 35 115 125 126 127 175 176 177
    178 179 180 181
ROUND_BRACKET_CLOSE (264) 8 11 16 17 27 35 115 125 126 127 175 176
    177 178 179 180 181
SQUARE_BRACKET_OPEN (265) 10 116 117 118 119 120 121 122 123 124 154
SQUARE_BRACKET_CLOSE (266) 10 116 117 118 119 120 121 122 123 124 154
CURLY_BRACKET_OPEN (267) 16 17 145 146 165
CURLY_BRACKET_CLOSE (268) 16 17 145 146 165
UNARY_INCREMENT (269) 14 23
UNARY_DECREMENT (270) 15 24
NOT (271) 33
MUL (272) 29 37 123 124 129 130
DIV (273) 38
MOD (274) 39
PLUS (275) 30 41
MINUS (276) 31 42
COMPLEMENT (277) 32
XOR (278) 57
DOT (279) 12 155
DOTS (280) 136
COMMA (281) 17 21 80 92 136 138 142 146 148
QUES_MARK (282) 65
COLON (283) 65 162 163 164
SEMICOLON (284) 82 172 179 182 183 184 185 186
IMPLIES (285) 13
HASH (286)
BITWISE_LEFT (287) 44
BITWISE_RIGHT (288) 45
BITWISE_AND (289) 28 55
BITWISE_OR (290) 59
LOGICAL_AND (291) 61
LOGICAL_OR (292) 63
LESS_THAN (293) 47
GREATER_THAN (294) 48
LESS_EQUAL (295) 49
GREATER_EQUAL (296) 50
EQUAL (297) 52
NOT_EQUAL (298) 53
ASSIGN (299) 68 94 149
MUL_ASSIGN (300) 69
DIV_ASSIGN (301) 70
MOD_ASSIGN (302) 71
PLUS_ASSIGN (303) 72
MINUS_ASSIGN (304) 73
BITWISE_LEFT_ASSIGN (305) 74
BITWISE_RIGHT_ASSIGN (306) 75
BITWISE_AND_ASSIGN (307) 76
XOR_ASSIGN (308) 77
BITWISE_OR_ASSIGN (309) 78
EXTERN (310) 95
STATIC (311) 96 120 121 122
VOID (312) 97
CHAR (313) 98
SHORT (314) 99
INT (315) 100
LONG (316) 101
FLOAT (317) 102
DOUBLE (318) 103
CONST (319) 108
RESTRICT (320) 109
VOLATILE (321) 110
INLINE (322) 111
SIZEOF (323) 26 27
TYPEDEF (324)
UNION (325)
STRUCT (326)
CASE (327) 163
DEFAULT (328) 164
IF (329) 175 176
ELSE (330) 176
SWITCH (331) 177
WHILE (332) 178 179
DO (333) 179
FOR (334) 180 181
GOTO (335) 182
CONTINUE (336) 183
BREAK (337) 184
RETURN (338) 185 186
"LOWER_THAN_ELSE" (339)


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
M (86)
    on left: 1, on right: 61 63 65 167 175 176 178 179 180 181
N (87)
    on left: 2, on right: 61 63 65 175 176 181
primary_expression (88)
    on left: 3 4 5 6 7 8, on right: 9
postfix_expression (89)
    on left: 9 10 11 12 13 14 15 16 17, on right: 10 11 12 13 14 15
    22
argument_expression_list_opt (90)
    on left: 18 19, on right: 11
argument_expression_list (91)
    on left: 20 21, on right: 18 21
unary_expression (92)
    on left: 22 23 24 25 26 27, on right: 23 24 26 34 67
unary_operator (93)
    on left: 28 29 30 31 32 33, on right: 25
cast_expression (94)
    on left: 34 35, on right: 25 35 36 37 38 39
multiplicative_expression (95)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (96)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (97)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (98)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (99)
    on left: 51 52 53, on right: 52 53 54 55
AND_expression (100)
    on left: 54 55, on right: 55 56 57
exclusive_OR_expression (101)
    on left: 56 57, on right: 57 58 59
inclusive_OR_expression (102)
    on left: 58 59, on right: 59 60 61
logical_AND_expression (103)
    on left: 60 61, on right: 61 62 63
logical_OR_expression (104)
    on left: 62 63, on right: 63 64 65
conditional_expression (105)
    on left: 64 65, on right: 65 66 81
assignment_expression (106)
    on left: 66 67, on right: 20 21 67 79 80 116 117 120 121 122 144
assignment_operator (107)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 67
expression (108)
    on left: 79 80, on right: 8 10 65 80 173 175 176 177 178 179 181
    185
constant_expression (109)
    on left: 81, on right: 154 163
declaration (110)
    on left: 82, on right: 168 190 192 193
init_declarator_list_opt (111)
    on left: 83 84, on right: 82
declaration_specifiers (112)
    on left: 85 86 87 88, on right: 82 89 139 140 191
declaration_specifiers_opt (113)
    on left: 89 90, on right: 85 86 87 88
init_declarator_list (114)
    on left: 91 92, on right: 83 92
init_declarator (115)
    on left: 93 94, on right: 91 92
storage_class_specifier (116)
    on left: 95 96, on right: 85
type_specifier (117)
    on left: 97 98 99 100 101 102 103, on right: 86 104
specifier_qualifier_list (118)
    on left: 104 105, on right: 106 143
specifier_qualifier_list_opt (119)
    on left: 106 107, on right: 104 105
type_qualifier (120)
    on left: 108 109 110, on right: 87 105 131 132
function_specifier (121)
    on left: 111, on right: 88
declarator (122)
    on left: 112 113, on right: 93 94 115 139 191
direct_declarator (123)
    on left: 114 115 116 117 118 119 120 121 122 123 124 125 126 127,
    on right: 112 113 116 117 118 119 120 121 122 123 124 125 126 127
changetable (124)
    on left: 128, on right: 125 126 191
pointer (125)
    on left: 129 130, on right: 112 130
type_qualifier_list (126)
    on left: 131 132, on right: 116 118 120 122 123 132 133
type_qualifier_list_opt (127)
    on left: 133 134, on right: 129 130
parameter_type_list (128)
    on left: 135 136, on right: 125
parameter_list (129)
    on left: 137 138, on right: 135 136 138
parameter_declaration (130)
    on left: 139 140, on right: 137 138
identifier_list (131)
    on left: 141 142, on right: 127 142
type_name (132)
    on left: 143, on right: 16 17 27 35
initializer (133)
    on left: 144 145 146, on right: 94 147 148
initializer_list (134)
    on left: 147 148, on right: 16 17 145 146 148
designation (135)
    on left: 149, on right: 150
designation_opt (136)
    on left: 150 151, on right: 147 148
designator_list (137)
    on left: 152 153, on right: 149 153
designator (138)
    on left: 154 155, on right: 152 153
statement (139)
    on left: 156 157 158 159 160 161, on right: 162 163 164 169 175
    176 177 178 179 180 181
labeled_statement (140)
    on left: 162 163 164, on right: 156
compound_statement (141)
    on left: 165, on right: 157 191
block_item_list (142)
    on left: 166 167, on right: 167 170
block_item (143)
    on left: 168 169, on right: 166 167
block_item_list_opt (144)
    on left: 170 171, on right: 165
expression_statement (145)
    on left: 172, on right: 158 180 181
expression_opt (146)
    on left: 173 174, on right: 172
selection_statement (147)
    on left: 175 176 177, on right: 159
iteration_statement (148)
    on left: 178 179 180 181, on right: 160
jump_statement (149)
    on left: 182 183 184 185 186, on right: 161
translation_unit (150)
    on left: 187 188, on right: 0 188
external_declaration (151)
    on left: 189 190, on right: 187 188
function_definition (152)
    on left: 191, on right: 189
declaration_list (153)
    on left: 192 193, on right: 193 194
declaration_list_opt (154)
    on left: 194 195, on right: 191


State 0

    0 $accept: . translation_unit $end

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    translation_unit         go to state 20
    external_declaration     go to state 21
    function_definition      go to state 22


State 1

   95 storage_class_specifier: EXTERN .

    $default  reduce using rule 95 (storage_class_specifier)


State 2

   96 storage_class_specifier: STATIC .

    $default  reduce using rule 96 (storage_class_specifier)


State 3

   97 type_specifier: VOID .

    $default  reduce using rule 97 (type_specifier)


State 4

   98 type_specifier: CHAR .

    $default  reduce using rule 98 (type_specifier)


State 5

   99 type_specifier: SHORT .

    $default  reduce using rule 99 (type_specifier)


State 6

  100 type_specifier: INT .

    $default  reduce using rule 100 (type_specifier)


State 7

  101 type_specifier: LONG .

    $default  reduce using rule 101 (type_specifier)


State 8

  102 type_specifier: FLOAT .

    $default  reduce using rule 102 (type_specifier)


State 9

  103 type_specifier: DOUBLE .

    $default  reduce using rule 103 (type_specifier)


State 10

  108 type_qualifier: CONST .

    $default  reduce using rule 108 (type_qualifier)


State 11

  109 type_qualifier: RESTRICT .

    $default  reduce using rule 109 (type_qualifier)


State 12

  110 type_qualifier: VOLATILE .

    $default  reduce using rule 110 (type_qualifier)


State 13

  111 function_specifier: INLINE .

    $default  reduce using rule 111 (function_specifier)


State 14

  190 external_declaration: declaration .

    $default  reduce using rule 190 (external_declaration)


State 15

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON
  191 function_definition: declaration_specifiers . declarator declaration_list_opt changetable compound_statement

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 26
    init_declarator_list      go to state 27
    init_declarator           go to state 28
    declarator                go to state 29
    direct_declarator         go to state 30
    pointer                   go to state 31


State 16

   85 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 33
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 17

   86 declaration_specifiers: type_specifier . declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 34
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 18

   87 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 35
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 19

   88 declaration_specifiers: function_specifier . declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 36
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 20

    0 $accept: translation_unit . $end
  188 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 37
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    external_declaration     go to state 38
    function_definition      go to state 22


State 21

  187 translation_unit: external_declaration .

    $default  reduce using rule 187 (translation_unit)


State 22

  189 external_declaration: function_definition .

    $default  reduce using rule 189 (external_declaration)


State 23

  114 direct_declarator: IDENTIFIER .

    $default  reduce using rule 114 (direct_declarator)


State 24

  115 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    declarator         go to state 39
    direct_declarator  go to state 30
    pointer            go to state 31


State 25

  129 pointer: MUL . type_qualifier_list_opt
  130        | MUL . type_qualifier_list_opt pointer

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 134 (type_qualifier_list_opt)

    type_qualifier           go to state 40
    type_qualifier_list      go to state 41
    type_qualifier_list_opt  go to state 42


State 26

   82 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 27

   83 init_declarator_list_opt: init_declarator_list .
   92 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 44

    $default  reduce using rule 83 (init_declarator_list_opt)


State 28

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 29

   93 init_declarator: declarator .
   94                | declarator . ASSIGN initializer
  191 function_definition: declaration_specifiers declarator . declaration_list_opt changetable compound_statement

    ASSIGN    shift, and go to state 45
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    CURLY_BRACKET_OPEN  reduce using rule 195 (declaration_list_opt)
    $default            reduce using rule 93 (init_declarator)

    declaration              go to state 46
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    declaration_list         go to state 48
    declaration_list_opt     go to state 49


State 30

  113 declarator: direct_declarator .
  116 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  119                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  120                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  122                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  123                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  124                  | direct_declarator . SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  125                  | direct_declarator . ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  126                  | direct_declarator . ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  127                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN   shift, and go to state 50
    SQUARE_BRACKET_OPEN  shift, and go to state 51

    $default  reduce using rule 113 (declarator)


State 31

  112 declarator: pointer . direct_declarator

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24

    direct_declarator  go to state 52


State 32

   89 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 33

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 34

   86 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 35

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 36

   88 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 37

    0 $accept: translation_unit $end .

    $default  accept


State 38

  188 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 188 (translation_unit)


State 39

  115 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 53


State 40

  131 type_qualifier_list: type_qualifier .

    $default  reduce using rule 131 (type_qualifier_list)


State 41

  132 type_qualifier_list: type_qualifier_list . type_qualifier
  133 type_qualifier_list_opt: type_qualifier_list .

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 133 (type_qualifier_list_opt)

    type_qualifier  go to state 54


State 42

  129 pointer: MUL type_qualifier_list_opt .
  130        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 25

    $default  reduce using rule 129 (pointer)

    pointer  go to state 55


State 43

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 82 (declaration)


State 44

   92 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    init_declarator    go to state 56
    declarator         go to state 57
    direct_declarator  go to state 30
    pointer            go to state 31


State 45

   94 init_declarator: declarator ASSIGN . initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 91


State 46

  192 declaration_list: declaration .

    $default  reduce using rule 192 (declaration_list)


State 47

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 26
    init_declarator_list      go to state 27
    init_declarator           go to state 28
    declarator                go to state 57
    direct_declarator         go to state 30
    pointer                   go to state 31


State 48

  193 declaration_list: declaration_list . declaration
  194 declaration_list_opt: declaration_list .

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 194 (declaration_list_opt)

    declaration              go to state 92
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 49

  191 function_definition: declaration_specifiers declarator declaration_list_opt . changetable compound_statement

    $default  reduce using rule 128 (changetable)

    changetable  go to state 93


State 50

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . changetable parameter_type_list ROUND_BRACKET_CLOSE
  126                  | direct_declarator ROUND_BRACKET_OPEN . changetable ROUND_BRACKET_CLOSE
  127                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list ROUND_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 94

    $default  reduce using rule 128 (changetable)

    changetable      go to state 95
    identifier_list  go to state 96


State 51

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN . assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list SQUARE_BRACKET_CLOSE
  119                  | direct_declarator SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE
  120                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  122                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  123                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  124                  | direct_declarator SQUARE_BRACKET_OPEN . MUL SQUARE_BRACKET_CLOSE

    IDENTIFIER            shift, and go to state 58
    INTEGER_CONSTANT      shift, and go to state 59
    FLOAT_CONSTANT        shift, and go to state 60
    CHARACTER_CONSTANT    shift, and go to state 61
    STRING_LITERAL        shift, and go to state 62
    ROUND_BRACKET_OPEN    shift, and go to state 63
    SQUARE_BRACKET_CLOSE  shift, and go to state 97
    UNARY_INCREMENT       shift, and go to state 65
    UNARY_DECREMENT       shift, and go to state 66
    NOT                   shift, and go to state 67
    MUL                   shift, and go to state 98
    PLUS                  shift, and go to state 69
    MINUS                 shift, and go to state 70
    COMPLEMENT            shift, and go to state 71
    BITWISE_AND           shift, and go to state 72
    STATIC                shift, and go to state 99
    CONST                 shift, and go to state 10
    RESTRICT              shift, and go to state 11
    VOLATILE              shift, and go to state 12
    SIZEOF                shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 100
    type_qualifier             go to state 40
    type_qualifier_list        go to state 101


State 52

  112 declarator: pointer direct_declarator .
  116 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  119                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  120                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  122                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  123                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  124                  | direct_declarator . SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  125                  | direct_declarator . ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  126                  | direct_declarator . ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  127                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN   shift, and go to state 50
    SQUARE_BRACKET_OPEN  shift, and go to state 51

    $default  reduce using rule 112 (declarator)


State 53

  115 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 115 (direct_declarator)


State 54

  132 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 132 (type_qualifier_list)


State 55

  130 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 130 (pointer)


State 56

   92 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 57

   93 init_declarator: declarator .
   94                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 93 (init_declarator)


State 58

    3 primary_expression: IDENTIFIER .

    $default  reduce using rule 3 (primary_expression)


State 59

    4 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 60

    5 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 5 (primary_expression)


State 61

    6 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 6 (primary_expression)


State 62

    7 primary_expression: STRING_LITERAL .

    $default  reduce using rule 7 (primary_expression)


State 63

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   35 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 107


State 64

  145 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  146            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109

    $default  reduce using rule 151 (designation_opt)

    initializer_list  go to state 110
    designation       go to state 111
    designation_opt   go to state 112
    designator_list   go to state 113
    designator        go to state 114


State 65

   23 unary_expression: UNARY_INCREMENT . unary_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 115
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 116
    unary_operator      go to state 77


State 66

   24 unary_expression: UNARY_DECREMENT . unary_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 115
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 117
    unary_operator      go to state 77


State 67

   33 unary_operator: NOT .

    $default  reduce using rule 33 (unary_operator)


State 68

   29 unary_operator: MUL .

    $default  reduce using rule 29 (unary_operator)


State 69

   30 unary_operator: PLUS .

    $default  reduce using rule 30 (unary_operator)


State 70

   31 unary_operator: MINUS .

    $default  reduce using rule 31 (unary_operator)


State 71

   32 unary_operator: COMPLEMENT .

    $default  reduce using rule 32 (unary_operator)


State 72

   28 unary_operator: BITWISE_AND .

    $default  reduce using rule 28 (unary_operator)


State 73

   26 unary_expression: SIZEOF . unary_expression
   27                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 118
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 119
    unary_operator      go to state 77


State 74

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 75

   10 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   11                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   12                   | postfix_expression . DOT IDENTIFIER
   13                   | postfix_expression . IMPLIES IDENTIFIER
   14                   | postfix_expression . UNARY_INCREMENT
   15                   | postfix_expression . UNARY_DECREMENT
   22 unary_expression: postfix_expression .

    ROUND_BRACKET_OPEN   shift, and go to state 120
    SQUARE_BRACKET_OPEN  shift, and go to state 121
    UNARY_INCREMENT      shift, and go to state 122
    UNARY_DECREMENT      shift, and go to state 123
    DOT                  shift, and go to state 124
    IMPLIES              shift, and go to state 125

    $default  reduce using rule 22 (unary_expression)


State 76

   34 cast_expression: unary_expression .
   67 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN                shift, and go to state 126
    MUL_ASSIGN            shift, and go to state 127
    DIV_ASSIGN            shift, and go to state 128
    MOD_ASSIGN            shift, and go to state 129
    PLUS_ASSIGN           shift, and go to state 130
    MINUS_ASSIGN          shift, and go to state 131
    BITWISE_LEFT_ASSIGN   shift, and go to state 132
    BITWISE_RIGHT_ASSIGN  shift, and go to state 133
    BITWISE_AND_ASSIGN    shift, and go to state 134
    XOR_ASSIGN            shift, and go to state 135
    BITWISE_OR_ASSIGN     shift, and go to state 136

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 137


State 77

   25 unary_expression: unary_operator . cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 139


State 78

   36 multiplicative_expression: cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 79

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   40 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 40 (additive_expression)


State 80

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: additive_expression .

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 43 (shift_expression)


State 81

   44 shift_expression: shift_expression . BITWISE_LEFT additive_expression
   45                 | shift_expression . BITWISE_RIGHT additive_expression
   46 relational_expression: shift_expression .

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 46 (relational_expression)


State 82

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_EQUAL shift_expression
   50                      | relational_expression . GREATER_EQUAL shift_expression
   51 equality_expression: relational_expression .

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 51 (equality_expression)


State 83

   52 equality_expression: equality_expression . EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   54 AND_expression: equality_expression .

    EQUAL      shift, and go to state 151
    NOT_EQUAL  shift, and go to state 152

    $default  reduce using rule 54 (AND_expression)


State 84

   55 AND_expression: AND_expression . BITWISE_AND equality_expression
   56 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 153

    $default  reduce using rule 56 (exclusive_OR_expression)


State 85

   57 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   58 inclusive_OR_expression: exclusive_OR_expression .

    XOR  shift, and go to state 154

    $default  reduce using rule 58 (inclusive_OR_expression)


State 86

   59 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   60 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 155

    $default  reduce using rule 60 (logical_AND_expression)


State 87

   61 logical_AND_expression: logical_AND_expression . N LOGICAL_AND M inclusive_OR_expression
   62 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  reduce using rule 2 (N)
    $default     reduce using rule 62 (logical_OR_expression)

    N  go to state 156


State 88

   63 logical_OR_expression: logical_OR_expression . N LOGICAL_OR M logical_AND_expression
   64 conditional_expression: logical_OR_expression .
   65                       | logical_OR_expression . N QUES_MARK M expression N COLON M conditional_expression

    QUES_MARK   reduce using rule 2 (N)
    LOGICAL_OR  reduce using rule 2 (N)
    $default    reduce using rule 64 (conditional_expression)

    N  go to state 157


State 89

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


State 90

  144 initializer: assignment_expression .

    $default  reduce using rule 144 (initializer)


State 91

   94 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 94 (init_declarator)


State 92

  193 declaration_list: declaration_list declaration .

    $default  reduce using rule 193 (declaration_list)


State 93

  191 function_definition: declaration_specifiers declarator declaration_list_opt changetable . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 158

    compound_statement  go to state 159


State 94

  141 identifier_list: IDENTIFIER .

    $default  reduce using rule 141 (identifier_list)


State 95

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable . parameter_type_list ROUND_BRACKET_CLOSE
  126                  | direct_declarator ROUND_BRACKET_OPEN changetable . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 160
    EXTERN               shift, and go to state 1
    STATIC               shift, and go to state 2
    VOID                 shift, and go to state 3
    CHAR                 shift, and go to state 4
    SHORT                shift, and go to state 5
    INT                  shift, and go to state 6
    LONG                 shift, and go to state 7
    FLOAT                shift, and go to state 8
    DOUBLE               shift, and go to state 9
    CONST                shift, and go to state 10
    RESTRICT             shift, and go to state 11
    VOLATILE             shift, and go to state 12
    INLINE               shift, and go to state 13

    declaration_specifiers   go to state 161
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_type_list      go to state 162
    parameter_list           go to state 163
    parameter_declaration    go to state 164


State 96

  127 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list . ROUND_BRACKET_CLOSE
  142 identifier_list: identifier_list . COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 165
    COMMA                shift, and go to state 166


State 97

  119 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 119 (direct_declarator)


State 98

   29 unary_operator: MUL .
  124 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 167

    $default  reduce using rule 29 (unary_operator)


State 99

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 168
    type_qualifier             go to state 40
    type_qualifier_list        go to state 169


State 100

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 170


State 101

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . SQUARE_BRACKET_CLOSE
  122                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  123                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . MUL SQUARE_BRACKET_CLOSE
  132 type_qualifier_list: type_qualifier_list . type_qualifier

    IDENTIFIER            shift, and go to state 58
    INTEGER_CONSTANT      shift, and go to state 59
    FLOAT_CONSTANT        shift, and go to state 60
    CHARACTER_CONSTANT    shift, and go to state 61
    STRING_LITERAL        shift, and go to state 62
    ROUND_BRACKET_OPEN    shift, and go to state 63
    SQUARE_BRACKET_CLOSE  shift, and go to state 171
    UNARY_INCREMENT       shift, and go to state 65
    UNARY_DECREMENT       shift, and go to state 66
    NOT                   shift, and go to state 67
    MUL                   shift, and go to state 172
    PLUS                  shift, and go to state 69
    MINUS                 shift, and go to state 70
    COMPLEMENT            shift, and go to state 71
    BITWISE_AND           shift, and go to state 72
    STATIC                shift, and go to state 173
    CONST                 shift, and go to state 10
    RESTRICT              shift, and go to state 11
    VOLATILE              shift, and go to state 12
    SIZEOF                shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 174
    type_qualifier             go to state 54


State 102

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 103

    8 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   80 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 175
    COMMA                shift, and go to state 176


State 104

  104 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 107 (specifier_qualifier_list_opt)

    type_specifier                go to state 104
    specifier_qualifier_list      go to state 177
    specifier_qualifier_list_opt  go to state 178
    type_qualifier                go to state 106


State 105

  143 type_name: specifier_qualifier_list .

    $default  reduce using rule 143 (type_name)


State 106

  105 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 107 (specifier_qualifier_list_opt)

    type_specifier                go to state 104
    specifier_qualifier_list      go to state 177
    specifier_qualifier_list_opt  go to state 179
    type_qualifier                go to state 106


State 107

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   35 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 180


State 108

  154 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 181
    constant_expression        go to state 182


State 109

  155 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 183


State 110

  145 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  146            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  148 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 184
    COMMA                shift, and go to state 185


State 111

  150 designation_opt: designation .

    $default  reduce using rule 150 (designation_opt)


State 112

  147 initializer_list: designation_opt . initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 186


State 113

  149 designation: designator_list . ASSIGN
  153 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109
    ASSIGN               shift, and go to state 187

    designator  go to state 188


State 114

  152 designator_list: designator .

    $default  reduce using rule 152 (designator_list)


State 115

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 189


State 116

   23 unary_expression: UNARY_INCREMENT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 117

   24 unary_expression: UNARY_DECREMENT unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 118

    8 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   27 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 190


State 119

   26 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 26 (unary_expression)


State 120

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . argument_expression_list_opt ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 19 (argument_expression_list_opt)

    primary_expression            go to state 74
    postfix_expression            go to state 75
    argument_expression_list_opt  go to state 191
    argument_expression_list      go to state 192
    unary_expression              go to state 76
    unary_operator                go to state 77
    cast_expression               go to state 78
    multiplicative_expression     go to state 79
    additive_expression           go to state 80
    shift_expression              go to state 81
    relational_expression         go to state 82
    equality_expression           go to state 83
    AND_expression                go to state 84
    exclusive_OR_expression       go to state 85
    inclusive_OR_expression       go to state 86
    logical_AND_expression        go to state 87
    logical_OR_expression         go to state 88
    conditional_expression        go to state 89
    assignment_expression         go to state 193


State 121

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 194


State 122

   14 postfix_expression: postfix_expression UNARY_INCREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 123

   15 postfix_expression: postfix_expression UNARY_DECREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 124

   12 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 195


State 125

   13 postfix_expression: postfix_expression IMPLIES . IDENTIFIER

    IDENTIFIER  shift, and go to state 196


State 126

   68 assignment_operator: ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 127

   69 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 128

   70 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 129

   71 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 130

   72 assignment_operator: PLUS_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 131

   73 assignment_operator: MINUS_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 132

   74 assignment_operator: BITWISE_LEFT_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 133

   75 assignment_operator: BITWISE_RIGHT_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 134

   76 assignment_operator: BITWISE_AND_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 135

   77 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 136

   78 assignment_operator: BITWISE_OR_ASSIGN .

    $default  reduce using rule 78 (assignment_operator)


State 137

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 197


State 138

   34 cast_expression: unary_expression .

    $default  reduce using rule 34 (cast_expression)


State 139

   25 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 25 (unary_expression)


State 140

   37 multiplicative_expression: multiplicative_expression MUL . cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 198


State 141

   38 multiplicative_expression: multiplicative_expression DIV . cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 199


State 142

   39 multiplicative_expression: multiplicative_expression MOD . cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 200


State 143

   41 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 201


State 144

   42 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 202


State 145

   44 shift_expression: shift_expression BITWISE_LEFT . additive_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 203


State 146

   45 shift_expression: shift_expression BITWISE_RIGHT . additive_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 204


State 147

   47 relational_expression: relational_expression LESS_THAN . shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 205


State 148

   48 relational_expression: relational_expression GREATER_THAN . shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 206


State 149

   49 relational_expression: relational_expression LESS_EQUAL . shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 207


State 150

   50 relational_expression: relational_expression GREATER_EQUAL . shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 208


State 151

   52 equality_expression: equality_expression EQUAL . relational_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 209


State 152

   53 equality_expression: equality_expression NOT_EQUAL . relational_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 210


State 153

   55 AND_expression: AND_expression BITWISE_AND . equality_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 211


State 154

   57 exclusive_OR_expression: exclusive_OR_expression XOR . AND_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 212


State 155

   59 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 213


State 156

   61 logical_AND_expression: logical_AND_expression N . LOGICAL_AND M inclusive_OR_expression

    LOGICAL_AND  shift, and go to state 214


State 157

   63 logical_OR_expression: logical_OR_expression N . LOGICAL_OR M logical_AND_expression
   65 conditional_expression: logical_OR_expression N . QUES_MARK M expression N COLON M conditional_expression

    QUES_MARK   shift, and go to state 215
    LOGICAL_OR  shift, and go to state 216


State 158

  165 compound_statement: CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    INLINE              shift, and go to state 13
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    SEMICOLON  reduce using rule 174 (expression_opt)
    $default   reduce using rule 171 (block_item_list_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    declaration                go to state 230
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 231
    labeled_statement          go to state 232
    compound_statement         go to state 233
    block_item_list            go to state 234
    block_item                 go to state 235
    block_item_list_opt        go to state 236
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 159

  191 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement .

    $default  reduce using rule 191 (function_definition)


State 160

  126 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE .

    $default  reduce using rule 126 (direct_declarator)


State 161

  139 parameter_declaration: declaration_specifiers . declarator
  140                      | declaration_specifiers .

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 140 (parameter_declaration)

    declarator         go to state 242
    direct_declarator  go to state 30
    pointer            go to state 31


State 162

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 243


State 163

  135 parameter_type_list: parameter_list .
  136                    | parameter_list . COMMA DOTS
  138 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 244

    $default  reduce using rule 135 (parameter_type_list)


State 164

  137 parameter_list: parameter_declaration .

    $default  reduce using rule 137 (parameter_list)


State 165

  127 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 127 (direct_declarator)


State 166

  142 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 245


State 167

  124 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 124 (direct_declarator)


State 168

  121 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 246


State 169

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  132 type_qualifier_list: type_qualifier_list . type_qualifier

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 247
    type_qualifier             go to state 54


State 170

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 117 (direct_declarator)


State 171

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 118 (direct_declarator)


State 172

   29 unary_operator: MUL .
  123 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 248

    $default  reduce using rule 29 (unary_operator)


State 173

  122 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 249


State 174

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 250


State 175

    8 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 8 (primary_expression)


State 176

   80 expression: expression COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 251


State 177

  106 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 106 (specifier_qualifier_list_opt)


State 178

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 104 (specifier_qualifier_list)


State 179

  105 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 105 (specifier_qualifier_list)


State 180

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   35 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 252
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 253


State 181

   81 constant_expression: conditional_expression .

    $default  reduce using rule 81 (constant_expression)


State 182

  154 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 254


State 183

  155 designator: DOT IDENTIFIER .

    $default  reduce using rule 155 (designator)


State 184

  145 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 145 (initializer)


State 185

  146 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  148 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    CURLY_BRACKET_CLOSE  shift, and go to state 255
    DOT                  shift, and go to state 109

    $default  reduce using rule 151 (designation_opt)

    designation      go to state 111
    designation_opt  go to state 256
    designator_list  go to state 113
    designator       go to state 114


State 186

  147 initializer_list: designation_opt initializer .

    $default  reduce using rule 147 (initializer_list)


State 187

  149 designation: designator_list ASSIGN .

    $default  reduce using rule 149 (designation)


State 188

  153 designator_list: designator_list designator .

    $default  reduce using rule 153 (designator_list)


State 189

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 257


State 190

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   27 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 258


State 191

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 259


State 192

   18 argument_expression_list_opt: argument_expression_list .
   21 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 260

    $default  reduce using rule 18 (argument_expression_list_opt)


State 193

   20 argument_expression_list: assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 194

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE
   80 expression: expression . COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 261
    COMMA                 shift, and go to state 176


State 195

   12 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 196

   13 postfix_expression: postfix_expression IMPLIES IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 197

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 198

   37 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 199

   38 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 200

   39 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 201

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   41 additive_expression: additive_expression PLUS multiplicative_expression .

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 41 (additive_expression)


State 202

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   42 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 42 (additive_expression)


State 203

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression BITWISE_LEFT additive_expression .

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 44 (shift_expression)


State 204

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   45 shift_expression: shift_expression BITWISE_RIGHT additive_expression .

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 45 (shift_expression)


State 205

   44 shift_expression: shift_expression . BITWISE_LEFT additive_expression
   45                 | shift_expression . BITWISE_RIGHT additive_expression
   47 relational_expression: relational_expression LESS_THAN shift_expression .

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 47 (relational_expression)


State 206

   44 shift_expression: shift_expression . BITWISE_LEFT additive_expression
   45                 | shift_expression . BITWISE_RIGHT additive_expression
   48 relational_expression: relational_expression GREATER_THAN shift_expression .

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 48 (relational_expression)


State 207

   44 shift_expression: shift_expression . BITWISE_LEFT additive_expression
   45                 | shift_expression . BITWISE_RIGHT additive_expression
   49 relational_expression: relational_expression LESS_EQUAL shift_expression .

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 49 (relational_expression)


State 208

   44 shift_expression: shift_expression . BITWISE_LEFT additive_expression
   45                 | shift_expression . BITWISE_RIGHT additive_expression
   50 relational_expression: relational_expression GREATER_EQUAL shift_expression .

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 50 (relational_expression)


State 209

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_EQUAL shift_expression
   50                      | relational_expression . GREATER_EQUAL shift_expression
   52 equality_expression: equality_expression EQUAL relational_expression .

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 52 (equality_expression)


State 210

   47 relational_expression: relational_expression . LESS_THAN shift_expression
   48                      | relational_expression . GREATER_THAN shift_expression
   49                      | relational_expression . LESS_EQUAL shift_expression
   50                      | relational_expression . GREATER_EQUAL shift_expression
   53 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 53 (equality_expression)


State 211

   52 equality_expression: equality_expression . EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   55 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQUAL      shift, and go to state 151
    NOT_EQUAL  shift, and go to state 152

    $default  reduce using rule 55 (AND_expression)


State 212

   55 AND_expression: AND_expression . BITWISE_AND equality_expression
   57 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression .

    BITWISE_AND  shift, and go to state 153

    $default  reduce using rule 57 (exclusive_OR_expression)


State 213

   57 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   59 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    XOR  shift, and go to state 154

    $default  reduce using rule 59 (inclusive_OR_expression)


State 214

   61 logical_AND_expression: logical_AND_expression N LOGICAL_AND . M inclusive_OR_expression

    $default  reduce using rule 1 (M)

    M  go to state 262


State 215

   65 conditional_expression: logical_OR_expression N QUES_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 263


State 216

   63 logical_OR_expression: logical_OR_expression N LOGICAL_OR . M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 264


State 217

    3 primary_expression: IDENTIFIER .
  162 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 265

    $default  reduce using rule 3 (primary_expression)


State 218

  163 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 181
    constant_expression        go to state 266


State 219

  164 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 267


State 220

  175 selection_statement: IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  176                    | IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 268


State 221

  177 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 269


State 222

  178 iteration_statement: WHILE . M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 270


State 223

  179 iteration_statement: DO . M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 271


State 224

  180 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  181                    | FOR . ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 272


State 225

  182 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 273


State 226

  183 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 274


State 227

  184 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 275


State 228

  185 jump_statement: RETURN . expression SEMICOLON
  186               | RETURN . SEMICOLON

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    SEMICOLON           shift, and go to state 276
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 277


State 229

   80 expression: expression . COMMA assignment_expression
  173 expression_opt: expression .

    COMMA  shift, and go to state 176

    $default  reduce using rule 173 (expression_opt)


State 230

  168 block_item: declaration .

    $default  reduce using rule 168 (block_item)


State 231

  169 block_item: statement .

    $default  reduce using rule 169 (block_item)


State 232

  156 statement: labeled_statement .

    $default  reduce using rule 156 (statement)


State 233

  157 statement: compound_statement .

    $default  reduce using rule 157 (statement)


State 234

  167 block_item_list: block_item_list . M block_item
  170 block_item_list_opt: block_item_list .

    CURLY_BRACKET_CLOSE  reduce using rule 170 (block_item_list_opt)
    $default             reduce using rule 1 (M)

    M  go to state 278


State 235

  166 block_item_list: block_item .

    $default  reduce using rule 166 (block_item_list)


State 236

  165 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 279


State 237

  158 statement: expression_statement .

    $default  reduce using rule 158 (statement)


State 238

  172 expression_statement: expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 280


State 239

  159 statement: selection_statement .

    $default  reduce using rule 159 (statement)


State 240

  160 statement: iteration_statement .

    $default  reduce using rule 160 (statement)


State 241

  161 statement: jump_statement .

    $default  reduce using rule 161 (statement)


State 242

  139 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 139 (parameter_declaration)


State 243

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 125 (direct_declarator)


State 244

  136 parameter_type_list: parameter_list COMMA . DOTS
  138 parameter_list: parameter_list COMMA . parameter_declaration

    DOTS      shift, and go to state 281
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration_specifiers   go to state 161
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_declaration    go to state 282


State 245

  142 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 142 (identifier_list)


State 246

  121 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 121 (direct_declarator)


State 247

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 283


State 248

  123 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 123 (direct_declarator)


State 249

  122 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 284


State 250

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 116 (direct_declarator)


State 251

   80 expression: expression COMMA assignment_expression .

    $default  reduce using rule 80 (expression)


State 252

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109

    $default  reduce using rule 151 (designation_opt)

    initializer_list  go to state 285
    designation       go to state 111
    designation_opt   go to state 112
    designator_list   go to state 113
    designator        go to state 114


State 253

   35 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 35 (cast_expression)


State 254

  154 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 154 (designator)


State 255

  146 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 146 (initializer)


State 256

  148 initializer_list: initializer_list COMMA designation_opt . initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 286


State 257

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 252


State 258

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   27 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    CURLY_BRACKET_OPEN  shift, and go to state 252

    $default  reduce using rule 27 (unary_expression)


State 259

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 11 (postfix_expression)


State 260

   21 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 287


State 261

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 10 (postfix_expression)


State 262

   61 logical_AND_expression: logical_AND_expression N LOGICAL_AND M . inclusive_OR_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 288


State 263

   65 conditional_expression: logical_OR_expression N QUES_MARK M . expression N COLON M conditional_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 289


State 264

   63 logical_OR_expression: logical_OR_expression N LOGICAL_OR M . logical_AND_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 290


State 265

  162 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 291
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 266

  163 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 292


State 267

  164 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 293
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 268

  175 selection_statement: IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N
  176                    | IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 294


State 269

  177 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 295


State 270

  178 iteration_statement: WHILE M . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 296


State 271

  179 iteration_statement: DO M . statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 297
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 272

  180 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  181                    | FOR ROUND_BRACKET_OPEN . expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    expression_statement       go to state 298
    expression_opt             go to state 238


State 273

  182 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 299


State 274

  183 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 183 (jump_statement)


State 275

  184 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 184 (jump_statement)


State 276

  186 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 186 (jump_statement)


State 277

   80 expression: expression . COMMA assignment_expression
  185 jump_statement: RETURN expression . SEMICOLON

    COMMA      shift, and go to state 176
    SEMICOLON  shift, and go to state 300


State 278

  167 block_item_list: block_item_list M . block_item

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    INLINE              shift, and go to state 13
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    declaration                go to state 230
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 231
    labeled_statement          go to state 232
    compound_statement         go to state 233
    block_item                 go to state 301
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 279

  165 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 165 (compound_statement)


State 280

  172 expression_statement: expression_opt SEMICOLON .

    $default  reduce using rule 172 (expression_statement)


State 281

  136 parameter_type_list: parameter_list COMMA DOTS .

    $default  reduce using rule 136 (parameter_type_list)


State 282

  138 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 138 (parameter_list)


State 283

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 120 (direct_declarator)


State 284

  122 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 122 (direct_declarator)


State 285

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  148 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 302
    COMMA                shift, and go to state 303


State 286

  148 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 148 (initializer_list)


State 287

   21 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 21 (argument_expression_list)


State 288

   59 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   61 logical_AND_expression: logical_AND_expression N LOGICAL_AND M inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 155

    $default  reduce using rule 61 (logical_AND_expression)


State 289

   65 conditional_expression: logical_OR_expression N QUES_MARK M expression . N COLON M conditional_expression
   80 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 176

    $default  reduce using rule 2 (N)

    N  go to state 304


State 290

   61 logical_AND_expression: logical_AND_expression . N LOGICAL_AND M inclusive_OR_expression
   63 logical_OR_expression: logical_OR_expression N LOGICAL_OR M logical_AND_expression .

    LOGICAL_AND  reduce using rule 2 (N)
    $default     reduce using rule 63 (logical_OR_expression)

    N  go to state 156


State 291

  162 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 162 (labeled_statement)


State 292

  163 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 305
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 293

  164 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 164 (labeled_statement)


State 294

   80 expression: expression . COMMA assignment_expression
  175 selection_statement: IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N
  176                    | IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 176

    $default  reduce using rule 2 (N)

    N  go to state 306


State 295

   80 expression: expression . COMMA assignment_expression
  177 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 307
    COMMA                shift, and go to state 176


State 296

  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 308


State 297

  179 iteration_statement: DO M statement . M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 309


State 298

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement . M expression_statement ROUND_BRACKET_CLOSE M statement
  181                    | FOR ROUND_BRACKET_OPEN expression_statement . M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 310


State 299

  182 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 182 (jump_statement)


State 300

  185 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 185 (jump_statement)


State 301

  167 block_item_list: block_item_list M block_item .

    $default  reduce using rule 167 (block_item_list)


State 302

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 16 (postfix_expression)


State 303

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  148 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    CURLY_BRACKET_CLOSE  shift, and go to state 311
    DOT                  shift, and go to state 109

    $default  reduce using rule 151 (designation_opt)

    designation      go to state 111
    designation_opt  go to state 256
    designator_list  go to state 113
    designator       go to state 114


State 304

   65 conditional_expression: logical_OR_expression N QUES_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 312


State 305

  163 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 163 (labeled_statement)


State 306

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N
  176                    | IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 313


State 307

  177 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 314
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 308

   80 expression: expression . COMMA assignment_expression
  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 315
    COMMA                shift, and go to state 176


State 309

  179 iteration_statement: DO M statement M . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 316


State 310

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M . expression_statement ROUND_BRACKET_CLOSE M statement
  181                    | FOR ROUND_BRACKET_OPEN expression_statement M . expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    expression_statement       go to state 317
    expression_opt             go to state 238


State 311

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


State 312

   65 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 318


State 313

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N
  176                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 319


State 314

  177 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 177 (selection_statement)


State 315

  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 320


State 316

  179 iteration_statement: DO M statement M WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 321


State 317

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement . ROUND_BRACKET_CLOSE M statement
  181                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement . M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 322

    $default  reduce using rule 1 (M)

    M  go to state 323


State 318

   65 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON M . conditional_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 324


State 319

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N
  176                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N ELSE M statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 325
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 320

  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 326
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 321

  179 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 327


State 322

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 328


State 323

  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M . expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 329


State 324

   65 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 65 (conditional_expression)


State 325

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N
  176                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 330


State 326

  178 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 178 (iteration_statement)


State 327

   80 expression: expression . COMMA assignment_expression
  179 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 331
    COMMA                shift, and go to state 176


State 328

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 332
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 329

   80 expression: expression . COMMA assignment_expression
  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression . N ROUND_BRACKET_CLOSE M statement

    COMMA  shift, and go to state 176

    $default  reduce using rule 2 (N)

    N  go to state 333


State 330

  175 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N .
  176                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N . ELSE M statement

    ELSE  shift, and go to state 334

    $default  reduce using rule 175 (selection_statement)


State 331

  179 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 335


State 332

  180 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 180 (iteration_statement)


State 333

  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N . ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 336


State 334

  176 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 337


State 335

  179 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 179 (iteration_statement)


State 336

  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 338


State 337

  176 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 339
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 338

  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M . statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 174 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 340
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 339

  176 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement .

    $default  reduce using rule 176 (selection_statement)


State 340

  181 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 181 (iteration_statement)
